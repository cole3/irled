C51 COMPILER V7.08   GPIO                         12/06/2015 11:23:58 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN GPIO.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\GPIO.c INCDIR(include) DEBU
                    -G OBJECTEXTEND PRINT(.\GPIO.lst) PAGEWIDTH(79) PAGELENGTH(66) OBJECT(GPIO.obj)

line level    source

   1          
   2          /*************  功能说明        **************
   3          
   4          本文件为STC15xxx系列的端口初始化程序,用户几乎可以不修改这个程序.
   5          
   6          
   7          ******************************************/
   8          
   9          #include        "GPIO.h"
  10          
  11          
  12          //===============================================================
             -=========
  13          // 函数: u8     GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx)
  14          // 描述: 初始化IO口.
  15          // 参数: GPIOx: 结构参数,请参考timer.h里的定义.
  16          // 返回: 成功返回0, 空操作返回1,错误返回2.
  17          // 版本: V1.0, 2012-10-22
  18          //===============================================================
             -=========
  19          u8      GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx)
  20          {
  21   1              if(GPIO > GPIO_P5)                              return 1;       //空操作
  22   1              if(GPIOx->Mode > GPIO_OUT_PP)   return 2;       //错误
  23   1              if(GPIO == GPIO_P0)
  24   1              {
  25   2                      if(GPIOx->Mode == GPIO_PullUp)          P0M1 &= ~GPIOx->Pin,    P0M0 &= ~G
             -PIOx->Pin;         //上拉准双向口
  26   2                      if(GPIOx->Mode == GPIO_HighZ)           P0M1 |=  GPIOx->Pin,    P0M0 &= ~GP
             -IOx->Pin;         //浮空输入
  27   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P0M1 |=  GPIOx->Pin,    P0M0 |=  G
             -PIOx->Pin;         //开漏输出
  28   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P0M1 &= ~GPIOx->Pin,    P0M0 |=  G
             -PIOx->Pin;         //推挽输出
  29   2              }
  30   1              if(GPIO == GPIO_P1)
  31   1              {
  32   2                      if(GPIOx->Mode == GPIO_PullUp)          P1M1 &= ~GPIOx->Pin,    P1M0 &= ~G
             -PIOx->Pin;         //上拉准双向口
  33   2                      if(GPIOx->Mode == GPIO_HighZ)           P1M1 |=  GPIOx->Pin,    P1M0 &= ~GP
             -IOx->Pin;         //浮空输入
  34   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P1M1 |=  GPIOx->Pin,    P1M0 |=  G
             -PIOx->Pin;         //开漏输出
  35   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P1M1 &= ~GPIOx->Pin,    P1M0 |=  G
             -PIOx->Pin;         //推挽输出
  36   2              }
  37   1              if(GPIO == GPIO_P2)
  38   1              {
  39   2                      if(GPIOx->Mode == GPIO_PullUp)          P2M1 &= ~GPIOx->Pin,    P2M0 &= ~G
             -PIOx->Pin;         //上拉准双向口
  40   2                      if(GPIOx->Mode == GPIO_HighZ)           P2M1 |=  GPIOx->Pin,    P2M0 &= ~GP
             -IOx->Pin;         //浮空输入
  41   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P2M1 |=  GPIOx->Pin,    P2M0 |=  G
             -PIOx->Pin;         //开漏输出
  42   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P2M1 &= ~GPIOx->Pin,    P2M0 |=  G
             -PIOx->Pin;         //推挽输出
C51 COMPILER V7.08   GPIO                         12/06/2015 11:23:58 PAGE 2   

  43   2              }
  44   1              if(GPIO == GPIO_P3)
  45   1              {
  46   2                      if(GPIOx->Mode == GPIO_PullUp)          P3M1 &= ~GPIOx->Pin,    P3M0 &= ~G
             -PIOx->Pin;         //上拉准双向口
  47   2                      if(GPIOx->Mode == GPIO_HighZ)           P3M1 |=  GPIOx->Pin,    P3M0 &= ~GP
             -IOx->Pin;         //浮空输入
  48   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P3M1 |=  GPIOx->Pin,    P3M0 |=  G
             -PIOx->Pin;         //开漏输出
  49   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P3M1 &= ~GPIOx->Pin,    P3M0 |=  G
             -PIOx->Pin;         //推挽输出
  50   2              }
  51   1              if(GPIO == GPIO_P4)
  52   1              {
  53   2                      if(GPIOx->Mode == GPIO_PullUp)          P4M1 &= ~GPIOx->Pin,    P4M0 &= ~G
             -PIOx->Pin;         //上拉准双向口
  54   2                      if(GPIOx->Mode == GPIO_HighZ)           P4M1 |=  GPIOx->Pin,    P4M0 &= ~GP
             -IOx->Pin;         //浮空输入
  55   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P4M1 |=  GPIOx->Pin,    P4M0 |=  G
             -PIOx->Pin;         //开漏输出
  56   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P4M1 &= ~GPIOx->Pin,    P4M0 |=  G
             -PIOx->Pin;         //推挽输出
  57   2              }
  58   1              if(GPIO == GPIO_P5)
  59   1              {
  60   2                      if(GPIOx->Mode == GPIO_PullUp)          P5M1 &= ~GPIOx->Pin,    P5M0 &= ~G
             -PIOx->Pin;         //上拉准双向口
  61   2                      if(GPIOx->Mode == GPIO_HighZ)           P5M1 |=  GPIOx->Pin,    P5M0 &= ~GP
             -IOx->Pin;         //浮空输入
  62   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P5M1 |=  GPIOx->Pin,    P5M0 |=  G
             -PIOx->Pin;         //开漏输出
  63   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P5M1 &= ~GPIOx->Pin,    P5M0 |=  G
             -PIOx->Pin;         //推挽输出
  64   2              }
  65   1              return 0;       //成功
  66   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    452    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
