C51 COMPILER V7.08   MAIN                         12/06/2015 18:14:15 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\main.c INCDIR(include) DEBU
                    -G OBJECTEXTEND PRINT(.\main.lst) PAGEWIDTH(79) PAGELENGTH(66) OBJECT(main.obj)

line level    source

   1          #include "config.h"
   2          #include "GPIO.h"
   3          #include "delay.h"
   4          #include "soft_uart.h"
   5          #include "ir.h"
   6          #include "key_code.h"
   7          
   8          
   9          #define SET_LED(led, state)     do {led = !state;} while (0)
  10          
  11          void gpio_init(void)
  12          {
  13   1          GPIO_InitTypeDef t_gpio_type;
  14   1      
  15   1          t_gpio_type.Mode = GPIO_HighZ;
  16   1          t_gpio_type.Pin = GPIO_Pin_0;       // UART RXD
  17   1          GPIO_Inilize(GPIO_P3, &t_gpio_type);
  18   1      
  19   1          t_gpio_type.Mode = GPIO_PullUp;
  20   1          t_gpio_type.Pin = GPIO_Pin_1;       // UART TXD
  21   1          GPIO_Inilize(GPIO_P3, &t_gpio_type);
  22   1      
  23   1          t_gpio_type.Mode = GPIO_PullUp;
  24   1          t_gpio_type.Pin = GPIO_Pin_2;       // white LED
  25   1          GPIO_Inilize(GPIO_P3, &t_gpio_type);
  26   1          WHITE_LED = 1;
  27   1      
  28   1          t_gpio_type.Mode = GPIO_PullUp;
  29   1          t_gpio_type.Pin = GPIO_Pin_3;       // Color LED
  30   1          GPIO_Inilize(GPIO_P3, &t_gpio_type);
  31   1          COLOR_LED = 1;
  32   1      
  33   1          t_gpio_type.Mode = GPIO_PullUp;
  34   1          t_gpio_type.Pin = GPIO_Pin_4;       // IR send
  35   1          GPIO_Inilize(GPIO_P3, &t_gpio_type);
  36   1          IR_SEND = 1;
  37   1      
  38   1          t_gpio_type.Mode = GPIO_HighZ;
  39   1          t_gpio_type.Pin = GPIO_Pin_5;       // IR rev
  40   1          GPIO_Inilize(GPIO_P3, &t_gpio_type);
  41   1      }
  42          
  43          #if 0
              void slow_led(bit on, unsigned int sec)
              {
                  unsigned int i, cnt, m;
              #define INTER_MS        600
                  m = sec * 600;
              
                  WHITE_LED = on;
                  for (i=0; i<m; i++) {
                      cnt = i;
                      WHITE_LED = !WHITE_LED;
                      while (cnt--);
              
                      cnt = m - i;
C51 COMPILER V7.08   MAIN                         12/06/2015 18:14:15 PAGE 2   

                      WHITE_LED = !WHITE_LED;
                      while (cnt--);
                  }
                  WHITE_LED = !on;
              }
              
              void breath_led(void)
              {
                  while (1) {
                      slow_led(1, 2);
                      slow_led(0, 2);
                  }
              }
              #endif
  71          
  72          static void send_key_to_android(enum key_code key_code)
  73          {
  74   1          print_str("\n\r");
  75   1          print_str("input keyevent ");
  76   1          print_dec(key_code);
  77   1          print_str("\n\r");
  78   1      }
  79          
  80          static enum key_code check_key(unsigned char *key)
  81          {
  82   1          unsigned char size = sizeof(key_map) / sizeof(key_map[0]);
  83   1          unsigned char i;
  84   1          unsigned long key_val;
  85   1      
  86   1          key_val = ((unsigned long)key[0] << 24) |
  87   1                    ((unsigned long)key[1] << 16) |
  88   1                    ((unsigned long)key[2] << 8) |
  89   1                    ((unsigned long)key[3]);
  90   1      
  91   1          for (i=0; i<size; i++) {
  92   2              if (key_val == key_map[i].ir_code) {
  93   3                  return key_map[i].key_code;
  94   3              }
  95   2          }
  96   1      
  97   1          return KEYCODE_UNKNOWN;
  98   1      }
  99          
 100          
 101          static void handle_key(enum key_code key_code)
 102          {
 103   1          static bit led_on = FALSE;
 104   1          bit led_ctl = FALSE;
 105   1      
 106   1          switch (key_code) {
 107   2          case KEYCODE_LED_ON:
 108   2              led_on = TRUE;
 109   2              led_ctl = TRUE;
 110   2              break;
 111   2          case KEYCODE_LED_OFF:
 112   2              led_on = FALSE;
 113   2              led_ctl = TRUE;
 114   2              break;
 115   2          case KEYCODE_LED_REV:
 116   2              led_on = !led_on;
 117   2              led_ctl = TRUE;
 118   2              break;
 119   2          case KEYCODE_UNKNOWN:
 120   2              break;
C51 COMPILER V7.08   MAIN                         12/06/2015 18:14:15 PAGE 3   

 121   2          default:
 122   2              send_key_to_android(key_code);
 123   2              break;
 124   2          }
 125   1      
 126   1          if (led_ctl) {
 127   2              SET_LED(WHITE_LED, led_on);
 128   2          }
 129   1      }
 130          
 131          unsigned char Ir_Buf[4];
 132          unsigned int ir_loop_cnt = 0;
 133          
 134          
 135          main()
 136          {
 137   1          EA = 1;
 138   1          gpio_init();
 139   1          ir_rcv_init();
 140   1      
 141   1      #if 0
                  //0x00FF0DF2
              
                  //breath_led();
                  Ir_Buf[0] = 0x00;
                  Ir_Buf[1] = 0xFF;
                  Ir_Buf[2] = 0x0D;
                  Ir_Buf[3] = 0xF2;
                  while (1) {
                      ir_send(Ir_Buf);
                      delay_ms(200);
                      COLOR_LED = 0;
                      delay_ms(200);
                      COLOR_LED = 1;
                  }
              #endif
 157   1      
 158   1          while (1) {
 159   2      #if 0
                      if (ir_loop_cnt++ > 5000) {
                          ir_loop_cnt = 0;
                          if (check_ir_loop()) {
                              slow_led(1, 4);
                              delay_ms(30000);
                              slow_led(0, 4);
                          }
                      }
              #endif
 169   2              //MCU_IDLE();
 170   2              if (ir_rcv(Ir_Buf)) {
 171   3                  print_str("rcv key: 0x");
 172   3                  print_hex(Ir_Buf[0]);
 173   3                  print_hex(Ir_Buf[1]);
 174   3                  print_hex(Ir_Buf[2]);
 175   3                  print_hex(Ir_Buf[3]);
 176   3                  print_str("\n\r");
 177   3      
 178   3                  handle_key(check_key(Ir_Buf));
 179   3              }
 180   2          }
 181   1      }
 182          
 183          
 184          
C51 COMPILER V7.08   MAIN                         12/06/2015 18:14:15 PAGE 4   

 185          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    471    ----
   CONSTANT SIZE    =    111    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
